{"ast":null,"code":"// import {\n\n//   Box,\n//   Flex,\n//   Text,\n//   IconButton,\n//   Button,\n//   Stack,\n//   Collapse,\n//   Icon,\n//   Link,\n//   Popover,\n//   PopoverTrigger,\n//   PopoverContent,\n//   useColorModeValue,\n//   useBreakpointValue,\n//   useDisclosure,\n// } from '@chakra-ui/react';\n// import {\n//   HamburgerIcon,\n//   CloseIcon,\n//   ChevronDownIcon,\n//   ChevronRightIcon,\n// } from '@chakra-ui/icons';\n\n// export default function WithSubnavigation() {\n//   const { isOpen, onToggle } = useDisclosure();\n\n//   return (\n//     <Box>\n//       <Flex\n//         bg={useColorModeValue('white', 'gray.800')}\n//         color={useColorModeValue('gray.600', 'white')}\n//         minH={'60px'}\n//         py={{ base: 2 }}\n//         px={{ base: 4 }}\n//         borderBottom={1}\n//         borderStyle={'solid'}\n//         borderColor={useColorModeValue('gray.200', 'gray.900')}\n//         align={'center'}>\n//         <Flex\n//           flex={{ base: 1, md: 'auto' }}\n//           ml={{ base: -2 }}\n//           display={{ base: 'flex', md: 'none' }}>\n//           <IconButton\n//             onClick={onToggle}\n//             icon={\n//               isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n//             }\n//             variant={'ghost'}\n//             aria-label={'Toggle Navigation'}\n//           />\n//         </Flex>\n//         <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n//           <Text\n//             textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n//             fontFamily={'heading'}\n//             color={useColorModeValue('gray.800', 'white')}>\n//             Logo\n//           </Text>\n\n//           <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n//             <DesktopNav />\n//           </Flex>\n//         </Flex>\n\n//         <Stack\n//           flex={{ base: 1, md: 0 }}\n//           justify={'flex-end'}\n//           direction={'row'}\n//           spacing={6}>\n//           <Button\n//             as={'a'}\n//             fontSize={'sm'}\n//             fontWeight={400}\n//             variant={'link'}\n//             href={'#'}>\n//             Sign In\n//           </Button>\n//           <Button\n//             display={{ base: 'none', md: 'inline-flex' }}\n//             fontSize={'sm'}\n//             fontWeight={600}\n//             color={'white'}\n//             bg={'pink.400'}\n//             href={'#'}\n//             _hover={{\n//               bg: 'pink.300',\n//             }}>\n//             Sign Up\n//           </Button>\n//         </Stack>\n//       </Flex>\n\n//       <Collapse in={isOpen} animateOpacity>\n//         <MobileNav />\n//       </Collapse>\n//     </Box>\n//   );\n// }\n\n// const DesktopNav = () => {\n//   const linkColor = useColorModeValue('gray.600', 'gray.200');\n//   const linkHoverColor = useColorModeValue('gray.800', 'white');\n//   const popoverContentBgColor = useColorModeValue('white', 'gray.800');\n\n//   return (\n//     <Stack direction={'row'} spacing={4}>\n//       {NAV_ITEMS.map((navItem) => (\n//         <Box key={navItem.label}>\n//           <Popover trigger={'hover'} placement={'bottom-start'}>\n//             <PopoverTrigger>\n//               <Link\n//                 p={2}\n//                 href={navItem.href ?? '#'}\n//                 fontSize={'sm'}\n//                 fontWeight={500}\n//                 color={linkColor}\n//                 _hover={{\n//                   textDecoration: 'none',\n//                   color: linkHoverColor,\n//                 }}>\n//                 {navItem.label}\n//               </Link>\n//             </PopoverTrigger>\n\n//             {navItem.children && (\n//               <PopoverContent\n//                 border={0}\n//                 boxShadow={'xl'}\n//                 bg={popoverContentBgColor}\n//                 p={4}\n//                 rounded={'xl'}\n//                 minW={'sm'}>\n//                 <Stack>\n//                   {navItem.children.map((child) => (\n//                     <DesktopSubNav key={child.label} {...child} />\n//                   ))}\n//                 </Stack>\n//               </PopoverContent>\n//             )}\n//           </Popover>\n//         </Box>\n//       ))}\n//     </Stack>\n//   );\n// };\n\n// const DesktopSubNav = ({ label, href, subLabel }) => {\n//   return (\n//     <Link\n//       href={href}\n//       role={'group'}\n//       display={'block'}\n//       p={2}\n//       rounded={'md'}\n//       _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n//       <Stack direction={'row'} align={'center'}>\n//         <Box>\n//           <Text\n//             transition={'all .3s ease'}\n//             _groupHover={{ color: 'pink.400' }}\n//             fontWeight={500}>\n//             {label}\n//           </Text>\n//           <Text fontSize={'sm'}>{subLabel}</Text>\n//         </Box>\n//         <Flex\n//           transition={'all .3s ease'}\n//           transform={'translateX(-10px)'}\n//           opacity={0}\n//           _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n//           justify={'flex-end'}\n//           align={'center'}\n//           flex={1}>\n//           <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n//         </Flex>\n//       </Stack>\n//     </Link>\n//   );\n// };\n\n// const MobileNav = () => {\n//   return (\n//     <Stack\n//       bg={useColorModeValue('white', 'gray.800')}\n//       p={4}\n//       display={{ md: 'none' }}>\n//       {NAV_ITEMS.map((navItem) => (\n//         <MobileNavItem key={navItem.label} {...navItem} />\n//       ))}\n//     </Stack>\n//   );\n// };\n\n// const MobileNavItem = ({ label, children, href }) => {\n//   const { isOpen, onToggle } = useDisclosure();\n\n//   return (\n//     <Stack spacing={4} onClick={children && onToggle}>\n//       <Flex\n//         py={2}\n//         as={Link}\n//         href={href ?? '#'}\n//         justify={'space-between'}\n//         align={'center'}\n//         _hover={{\n//           textDecoration: 'none',\n//         }}>\n//         <Text\n//           fontWeight={600}\n//           color={useColorModeValue('gray.600', 'gray.200')}>\n//           {label}\n//         </Text>\n//         {children && (\n//           <Icon\n//             as={ChevronDownIcon}\n//             transition={'all .25s ease-in-out'}\n//             transform={isOpen ? 'rotate(180deg)' : ''}\n//             w={6}\n//             h={6}\n//           />\n//         )}\n//       </Flex>\n\n//       <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n//         <Stack\n//           mt={2}\n//           pl={4}\n//           borderLeft={1}\n//           borderStyle={'solid'}\n//           borderColor={useColorModeValue('gray.200', 'gray.700')}\n//           align={'start'}>\n//           {children &&\n//             children.map((child) => (\n//               <Link key={child.label} py={2} href={child.href}>\n//                 {child.label}\n//               </Link>\n//             ))}\n//         </Stack>\n//       </Collapse>\n//     </Stack>\n//   );\n// };\n\n// const NAV_ITEMS = [\n//   {\n//     label: 'Inspiration',\n//     children: [\n//       {\n//         label: 'Explore Design Work',\n//         subLabel: 'Trending Design to inspire you',\n//         href: '#',\n//       },\n//       {\n//         label: 'New & Noteworthy',\n//         subLabel: 'Up-and-coming Designers',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Find Work',\n//     children: [\n//       {\n//         label: 'Job Board',\n//         subLabel: 'Find your dream design job',\n//         href: '#',\n//       },\n//       {\n//         label: 'Freelance Projects',\n//         subLabel: 'An exclusive list for contract work',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Learn Design',\n//     href: '#',\n//   },\n//   {\n//     label: 'Hire Designers',\n//     href: '#',\n//   },\n// ];","map":{"version":3,"names":[],"sources":["C:/Users/angol/Desktop/cult.fit/cruel-passenger-3092/src/components/Navbar.jsx"],"sourcesContent":["// import {\n\n//   Box,\n//   Flex,\n//   Text,\n//   IconButton,\n//   Button,\n//   Stack,\n//   Collapse,\n//   Icon,\n//   Link,\n//   Popover,\n//   PopoverTrigger,\n//   PopoverContent,\n//   useColorModeValue,\n//   useBreakpointValue,\n//   useDisclosure,\n// } from '@chakra-ui/react';\n// import {\n//   HamburgerIcon,\n//   CloseIcon,\n//   ChevronDownIcon,\n//   ChevronRightIcon,\n// } from '@chakra-ui/icons';\n\n// export default function WithSubnavigation() {\n//   const { isOpen, onToggle } = useDisclosure();\n\n//   return (\n//     <Box>\n//       <Flex\n//         bg={useColorModeValue('white', 'gray.800')}\n//         color={useColorModeValue('gray.600', 'white')}\n//         minH={'60px'}\n//         py={{ base: 2 }}\n//         px={{ base: 4 }}\n//         borderBottom={1}\n//         borderStyle={'solid'}\n//         borderColor={useColorModeValue('gray.200', 'gray.900')}\n//         align={'center'}>\n//         <Flex\n//           flex={{ base: 1, md: 'auto' }}\n//           ml={{ base: -2 }}\n//           display={{ base: 'flex', md: 'none' }}>\n//           <IconButton\n//             onClick={onToggle}\n//             icon={\n//               isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n//             }\n//             variant={'ghost'}\n//             aria-label={'Toggle Navigation'}\n//           />\n//         </Flex>\n//         <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n//           <Text\n//             textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n//             fontFamily={'heading'}\n//             color={useColorModeValue('gray.800', 'white')}>\n//             Logo\n//           </Text>\n\n//           <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n//             <DesktopNav />\n//           </Flex>\n//         </Flex>\n\n//         <Stack\n//           flex={{ base: 1, md: 0 }}\n//           justify={'flex-end'}\n//           direction={'row'}\n//           spacing={6}>\n//           <Button\n//             as={'a'}\n//             fontSize={'sm'}\n//             fontWeight={400}\n//             variant={'link'}\n//             href={'#'}>\n//             Sign In\n//           </Button>\n//           <Button\n//             display={{ base: 'none', md: 'inline-flex' }}\n//             fontSize={'sm'}\n//             fontWeight={600}\n//             color={'white'}\n//             bg={'pink.400'}\n//             href={'#'}\n//             _hover={{\n//               bg: 'pink.300',\n//             }}>\n//             Sign Up\n//           </Button>\n//         </Stack>\n//       </Flex>\n\n//       <Collapse in={isOpen} animateOpacity>\n//         <MobileNav />\n//       </Collapse>\n//     </Box>\n//   );\n// }\n\n// const DesktopNav = () => {\n//   const linkColor = useColorModeValue('gray.600', 'gray.200');\n//   const linkHoverColor = useColorModeValue('gray.800', 'white');\n//   const popoverContentBgColor = useColorModeValue('white', 'gray.800');\n\n//   return (\n//     <Stack direction={'row'} spacing={4}>\n//       {NAV_ITEMS.map((navItem) => (\n//         <Box key={navItem.label}>\n//           <Popover trigger={'hover'} placement={'bottom-start'}>\n//             <PopoverTrigger>\n//               <Link\n//                 p={2}\n//                 href={navItem.href ?? '#'}\n//                 fontSize={'sm'}\n//                 fontWeight={500}\n//                 color={linkColor}\n//                 _hover={{\n//                   textDecoration: 'none',\n//                   color: linkHoverColor,\n//                 }}>\n//                 {navItem.label}\n//               </Link>\n//             </PopoverTrigger>\n\n//             {navItem.children && (\n//               <PopoverContent\n//                 border={0}\n//                 boxShadow={'xl'}\n//                 bg={popoverContentBgColor}\n//                 p={4}\n//                 rounded={'xl'}\n//                 minW={'sm'}>\n//                 <Stack>\n//                   {navItem.children.map((child) => (\n//                     <DesktopSubNav key={child.label} {...child} />\n//                   ))}\n//                 </Stack>\n//               </PopoverContent>\n//             )}\n//           </Popover>\n//         </Box>\n//       ))}\n//     </Stack>\n//   );\n// };\n\n// const DesktopSubNav = ({ label, href, subLabel }) => {\n//   return (\n//     <Link\n//       href={href}\n//       role={'group'}\n//       display={'block'}\n//       p={2}\n//       rounded={'md'}\n//       _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n//       <Stack direction={'row'} align={'center'}>\n//         <Box>\n//           <Text\n//             transition={'all .3s ease'}\n//             _groupHover={{ color: 'pink.400' }}\n//             fontWeight={500}>\n//             {label}\n//           </Text>\n//           <Text fontSize={'sm'}>{subLabel}</Text>\n//         </Box>\n//         <Flex\n//           transition={'all .3s ease'}\n//           transform={'translateX(-10px)'}\n//           opacity={0}\n//           _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n//           justify={'flex-end'}\n//           align={'center'}\n//           flex={1}>\n//           <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n//         </Flex>\n//       </Stack>\n//     </Link>\n//   );\n// };\n\n// const MobileNav = () => {\n//   return (\n//     <Stack\n//       bg={useColorModeValue('white', 'gray.800')}\n//       p={4}\n//       display={{ md: 'none' }}>\n//       {NAV_ITEMS.map((navItem) => (\n//         <MobileNavItem key={navItem.label} {...navItem} />\n//       ))}\n//     </Stack>\n//   );\n// };\n\n// const MobileNavItem = ({ label, children, href }) => {\n//   const { isOpen, onToggle } = useDisclosure();\n\n//   return (\n//     <Stack spacing={4} onClick={children && onToggle}>\n//       <Flex\n//         py={2}\n//         as={Link}\n//         href={href ?? '#'}\n//         justify={'space-between'}\n//         align={'center'}\n//         _hover={{\n//           textDecoration: 'none',\n//         }}>\n//         <Text\n//           fontWeight={600}\n//           color={useColorModeValue('gray.600', 'gray.200')}>\n//           {label}\n//         </Text>\n//         {children && (\n//           <Icon\n//             as={ChevronDownIcon}\n//             transition={'all .25s ease-in-out'}\n//             transform={isOpen ? 'rotate(180deg)' : ''}\n//             w={6}\n//             h={6}\n//           />\n//         )}\n//       </Flex>\n\n//       <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n//         <Stack\n//           mt={2}\n//           pl={4}\n//           borderLeft={1}\n//           borderStyle={'solid'}\n//           borderColor={useColorModeValue('gray.200', 'gray.700')}\n//           align={'start'}>\n//           {children &&\n//             children.map((child) => (\n//               <Link key={child.label} py={2} href={child.href}>\n//                 {child.label}\n//               </Link>\n//             ))}\n//         </Stack>\n//       </Collapse>\n//     </Stack>\n//   );\n// };\n\n\n// const NAV_ITEMS = [\n//   {\n//     label: 'Inspiration',\n//     children: [\n//       {\n//         label: 'Explore Design Work',\n//         subLabel: 'Trending Design to inspire you',\n//         href: '#',\n//       },\n//       {\n//         label: 'New & Noteworthy',\n//         subLabel: 'Up-and-coming Designers',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Find Work',\n//     children: [\n//       {\n//         label: 'Job Board',\n//         subLabel: 'Find your dream design job',\n//         href: '#',\n//       },\n//       {\n//         label: 'Freelance Projects',\n//         subLabel: 'An exclusive list for contract work',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Learn Design',\n//     href: '#',\n//   },\n//   {\n//     label: 'Hire Designers',\n//     href: '#',\n//   },\n// ];"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}